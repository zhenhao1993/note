DNS与Web结合实验：           

一、搭建虚拟机C与虚拟机D
真机：
[root@room9pc01 ~]# clone-vm7 
Enter VM number: 1

[root@room9pc01 ~]# clone-vm7 
Enter VM number: 2

虚拟机C
虚拟机不需要配置IP地址
利用 virsh console 虚拟机名 可以直接链接     

[root@room9pc01 ~]# virsh console C
连接到域 C
换码符为 ^]
Red Hat Enterprise Linux Server 7.4 (Maipo)
Kernel 3.10.0-693.el7.x86_64 on an x86_64

localhost login: root
密码：
Last login: Tue Jan 30 12:29:01 on :0
[root@localhost ~]# 配置IP地址
[root@localhost ~]# exit
登出

Red Hat Enterprise Linux Server 7.4 (Maipo)
Kernel 3.10.0-693.el7.x86_64 on an x86_64

localhost login:   Ctrl + ]   #回到真机

[root@localhost ~]# echo C.tedu.cn > /etc/hostname
[root@localhost ~]# hostname C.tedu.cn
[root@localhost ~]# exit
登出
Connection to 192.168.4.10 closed.
[root@room9pc01 ~]# ssh -X root@192.168.4.10
root@192.168.4.10's password: 
Last login: Wed Oct 24 08:46:48 2018 from 192.168.4.254
[root@C ~]# 

虚拟机D进行配置如上


虚拟机搭建Yum：
[root@pc207 ~]# for i  in 10  20
> do
> scp /etc/yum.repos.d/rhel7.repo root@192.168.4.$i:/etc/yum.repos.d/
> done

##################################################
虚拟机C：搭建Web
[root@C ~]# yum -y install httpd
[root@C ~]# vim /etc/httpd/conf.d/nsd01.conf
[root@C ~]# cat /etc/httpd/conf.d/nsd01.conf
<VirtualHost *:80>
  ServerName www.qq.com
  DocumentRoot /var/www/qq
</VirtualHost>
<VirtualHost *:80>
  ServerName www.163.com
  DocumentRoot /var/www/163
</VirtualHost>
[root@C ~]# mkdir /var/www/qq /var/www/163
[root@C ~]# echo '<h1>Web1 QQ' > /var/www/qq/index.html
[root@C ~]# echo '<h1>Web1 163' > /var/www/163/index.html
[root@C ~]# systemctl restart httpd


虚拟机Svr7搭建DNS分离解析
[root@svr7 ~]# vim  /etc/named.conf 
options {
	directory 	"/var/named";
};

view nsd {
 match-clients { 192.168.4.7; };
  zone "qq.com" {
      type master;
      file "qq.com.zone";  ----》192.168.4.10
   };
  zone "163.com" {
      type master;
      file "163.com.zone"; ----》192.168.4.10
   };
};
view other {
 match-clients { any; };
  zone "qq.com" {
      type master;
      file "qq.com.other";----》192.168.4.20
   };
  zone "163.com" {
      type master;
      file "163.com.other";----》192.168.4.20
   };
};
[root@svr7 ~]# cd /var/named/
[root@svr7 named]# 建立相应地址库文件 写入不同的解析结果
[root@svr7 ~]# systemctl restart named


所有虚拟机DNS服务器，指向虚拟机A
 echo nameserver 192.168.4.7 > /etc/resolv.conf 

################################################
部署DHCP服务器
• Dynamic Host Configuration Protocol
– 动态主机配置协议,由 IETF(Internet 网络工程师任
务小组)组织制定,用来简化主机地址分配管理

• 主要分配以下入网参数
– IP地址/子网掩码/广播地址
– 默认网关地址、DNS服务器地址

• DHCP地址分配的四次会话（广播进行，先到先得）
– DISCOVERY --> OFFER --> REQUEST -->ACK

    在一个网络中只能有一台DHCP


• 装软件包 dhcp
• 配置文件 /etc/dhcp/dhcpd.conf
• 起服务 dhcpd

虚拟机A：
1.安装软件包
[root@svr7 /]# yum -y install dhcp
2.修改配置文件
[root@svr7 /]# vim  /etc/dhcp/dhcpd.conf 
    #读入其他文件内容
  :r /usr/share/doc/dhcp*/dhcpd.conf.example

subnet 192.168.4.0 netmask 255.255.255.0 { 分配的网段
  range 192.168.4.20 192.168.4.100;     分配范围
  option domain-name-servers 192.168.4.7; 分配DNS服务器
  option routers 192.168.4.254;  分配网关地址
  default-lease-time 600;   默认租约时间
  max-lease-time 7200;      最大租约时间
}
3.重起服务
[root@svr7 /]# systemctl restart dhcpd 

################################################
网络装机概述

网络装机的优势
• 规模化:同时装配多台主机
• 自动化:装系统、配置各种服务
• 远程实现:不需要光盘、U盘等物理安装介质

• 需要哪些服务组件?
– DHCP服务,分配IP地址、定位引导程序
– TFTP服务,提供引导程序下载
– HTTP服务,提供yum安装源

################################################
一、搭建配置DHCP服务

1.指定写一个服务器地址
[root@svr7 /]# vim /etc/dhcp/dhcpd.conf
subnet 192.168.4.0 netmask 255.255.255.0 {
  range 192.168.4.20 192.168.4.100;
  option domain-name-servers 192.168.4.7;
  option routers 192.168.4.254;
  default-lease-time 600;
  max-lease-time 7200;
  next-server  192.168.4.7;  #指定下一个服务器地址
  filename  "pxelinux.0";    #指定引导文件名称
}
2.重起服务
[root@svr7 /]# systemctl  restart  dhcpd

    pxelinux.0:网卡引导文件，安装说明书，二进制文件
                             安装一个软件，会自动生成该文件


二、配置TFTP服务

       tftp：简单的文件传输协议
             默认端口为：  69
             默认共享路径：/var/lib/tftpboot

1.安装tftp-server软件
[root@svr7 /]# yum -y install tftp-server

2.重起tftp服务
[root@svr7 /]# systemctl  restart  tftp
[root@svr7 /]# systemctl  enable   tftp

3.部署pxelinux.0文件
# yum  provides   */pxelinux.0  #查询那个软件包产生该文件
# yum -y  install  syslinux     #安装软件

# rpm -ql syslinux  |  grep pxelinux.0   #查看安装清单

# cp  /usr/share/syslinux/pxelinux.0  /var/lib/tftpboot/

# ls /var/lib/tftpboot/    
      
4.部署菜单文件
 默认存放路径/var/lib/tftpboot/pxelinux.cfg/

 pxelinux.0--》/var/lib/tftpboot/pxelinux.cfg/default

# mkdir /var/lib/tftpboot/pxelinux.cfg
# mount /dev/cdrom  /mnt
# ls /mnt/
# cp /mnt/isolinux/isolinux.cfg  /var/lib/tftpboot/pxelinux.cfg/default

# ls -l /var/lib/tftpboot/pxelinux.cfg/default
# chmod u+w /var/lib/tftpboot/pxelinux.cfg/default
# ls -l /var/lib/tftpboot/pxelinux.cfg/default

5.部署图形的模块(vesamenu.c32)与背景图片(splash.png)

[root@svr7 /]# cp /mnt/isolinux/vesamenu.c32 /mnt/isolinux/splash.png /var/lib/tftpboot/

[root@svr7 /]# ls /var/lib/tftpboot/
pxelinux.0  pxelinux.cfg  splash.png  vesamenu.c32

6.部署 启动内核（vmlinuz） 与  驱动程序（initrd.img）

[root@svr7 /]# cp /mnt/isolinux/vmlinuz /mnt/isolinux/initrd.img /var/lib/tftpboot/

[root@svr7 /]# ls /var/lib/tftpboot/
initrd.img  pxelinux.cfg  vesamenu.c32
pxelinux.0  splash.png    vmlinuz
[root@svr7 /]# 

7.修改菜单文件/var/lib/tftpboot/pxelinux.cfg/default

# vim /var/lib/tftpboot/pxelinux.cfg/default 

  1 default vesamenu.c32    #默认加载图形的模块
  2 timeout 60              #读秒时间为6秒
  9 menu background splash.png    #背景图片

 10 menu title NSD1809 PXE Server !!!  #标题

 60 label linux
 61   menu label Install RHEL7  #选项的内容
      menu  default             #读秒结束后默认选择
 62   kernel vmlinuz            #指定启动内核
 63   append initrd=initrd.img  #指定启动的驱动程序
################################################
总结：
 1.DHCP--->IP地址、next-server、filename
 2.tftp--->pxelinux.0
 3.pxelinux.0--->default
 4.default---》
          vesamenu.c32/splash.png/vmlinuz/initrd.img 


测试：新建一台虚拟机，采用PXE网络引导安装
         注意网络类型选择为：private1
##################################################
三、搭建httpd服务，共享光盘所有内容

1.安装软件包
[root@svr7 /]# yum -y install  httpd
2.重起服务
[root@svr7 /]# systemctl restart httpd

3.共享光盘所有内容
[root@svr7 /]# mkdir /var/www/html/rhel7/
[root@svr7 /]# mount /dev/cdrom  /var/www/html/rhel7/
mount: /dev/sr0 写保护，将以只读方式挂载
[root@svr7 /]# ls /var/www/html/rhel7/

4.访问测试
[root@svr7 /]# firefox 192.168.4.7/rhel7

###############################################
四、部署无人值守安装，生成应答文件

  1.通过图形的system-config-kickstart软件可以生成
  # yum -y install system-config-kickstart 

  2.运行图形的system-config-kickstart进行图形配置
 [root@room9pc01 ~]# ssh -X root@192.168.4.7
 root@192.168.4.7's password: 

 [root@svr7 ~]# system-config-kickstart
  首先检测  “软件包选择”  是否可以进行选择
  
  需要光盘的源的Yum仓库支持, 要求 仓库标识必须为 [development]
 [root@svr7 ~]# vim /etc/yum.repos.d/rhel7.repo
 [development]
   .......
                   
 [root@svr7 ~]# system-config-kickstart
  首先检测  “软件包选择”  是否可以进行选择

#################################################
五、应答文件     

[root@svr7 ~]# ls /root/ks.cfg 
/root/ks.cfg
[root@svr7 ~]# vim /root/ks.cfg

利用httpd服务，将应答文件共享
[root@svr7 ~]# cp /root/ks.cfg  /var/www/html/
[root@svr7 ~]# ls /var/www/html/
ks.cfg  rhel7
[root@svr7 ~]# firefox 192.168.4.7/ks.cfg

修改菜单文件，指定应答文件位置
# vim /var/lib/tftpboot/pxelinux.cfg/default 

label linux
menu label Install RHEL7
menu default
kernel vmlinuz
append initrd=initrd.img ks=http://192.168.4.7/ks.cfg

##################################################

总结：
 1.DHCP--->IP地址、next-server、filename
 2.tftp--->pxelinux.0
 3.pxelinux.0--->default
 4.default---》
          vesamenu.c32/splash.png/vmlinuz/initrd.img
          ks=http://192.168.4.7/ks.cfg

 5.ks.cfg----》--url="http://192.168.4.7/rhel7"

################################################



























































