rsync同步操作

• 命令用法
– rsync [选项...] 源目录      目标目录

• 同步与复制的差异
– 复制:完全拷贝源到目标
– 同步:增量拷贝,只传输变化过的数据



• 本地同步
– rsync [选项...] 本地目录1   本地目录2
– rsync [选项...] 本地目录1/   本地目录2

# mkdir /todir
# rsync -a /boot /todir/     /同步整个文件夹
# rsync -a /boot/ /todir/    //只同步目录下的数据


• rsync操作选项
 – -n:测试同步过程,不做实际修改
 – --delete:删除目标文件夹内多余的文档
 – -a:归档模式,相当于-rlptgoD
 – -v:显示详细操作信息
 – -z:传输过程中启用压缩/解压

[root@svr7 ~]# mkdir /test
[root@svr7 ~]# mkdir /abc

[root@svr7 ~]# cp -r /etc/passwd /home/  /test
[root@svr7 ~]# ls /test

[root@svr7 ~]# rsync -avz /test/  /abc
[root@svr7 ~]# ls /test
[root@svr7 ~]# ls /abc

[root@svr7 ~]# touch /test/{1..5}.txt
[root@svr7 ~]# ls /test
[root@svr7 ~]# rsync -avz /test/  /abc
[root@svr7 ~]# ls /test
[root@svr7 ~]# ls /abc
################################################

[root@svr7 ~]# rsync --delete -avz  /test/  /abc

[root@svr7 ~]# ls /test
[root@svr7 ~]# ls /abc

[root@svr7 ~]# touch /test/haha.txt /test/xixi.txt
[root@svr7 ~]# ls /test
[root@svr7 ~]# ls /abc

[root@svr7 ~]# rsync --delete -avz  /test/  /abc
[root@svr7 ~]# ls /test
[root@svr7 ~]# ls /abc

#################################################
rsync+SSH同步（远程同步）


• 与远程的 SSH目录保持同步
– 下行:rsync [...]  user@host:远程目录     本地目录
– 上行:rsync [...]  本地目录        user@host:远程目录

实现同步          
 将虚拟机A的/opt目录内容，同步到虚拟机B的/opt

虚拟机A:
# rsync --delete -avz  /opt/ root@192.168.4.207:/opt/
# ls  /opt

虚拟机B:
# ls  /opt

##################################################
实时同步

一、部署公钥  私钥，实现远程ssh无密码验证

虚拟机A：
1.生成公钥  私钥
[root@svr7 ~]# ssh-keygen   #一路回车
[root@svr7 ~]# ls /root/.ssh/
id_rsa  id_rsa.pub  known_hosts

2.传递公钥 到虚拟机B
[root@svr7 ~]# ssh-copy-id root@192.168.4.207

3.虚拟机B：查看
[root@pc207 ~]# ls /root/.ssh/
authorized_keys 
4.虚拟机A：测试无密码同步
[root@svr7 ~]# rsync --delete -avz  /opt/ root@192.168.4.207:/opt/

二、监控目录内容的变化

• Linux内核的 inotify 机制
– 提供事件响应式的文件系统通知机制
– 安装 inotify-tools 控制工具可调用此机制实现监控

1.真机传递tools.tar.gz到虚拟机A
# scp /root/桌面/tools.tar.gz  root@192.168.4.7:/root

2.虚拟机A验证：
[root@svr7 ~]# ls /root/
 tools.tar.gz  
[root@svr7 ~]# 

3.安装源码包
# mkdir /nsd
# tar -xf /root/tools.tar.gz -C /nsd
# tar -xf /nsd/tools/inotify-tools-3.13.tar.gz -C /root/
步骤1:安装gcc与make
步骤2:  ./configure 配置,指定安装目录/功能模块等选项
 # cd  /root/inotify-tools-3.13/
 # ./configure 
步骤4:make 编译,生成可执行的二进制程序文件
 # make
步骤5:make install 安装,将编译好的文件复制到安装目录
 # make install
 # ls  /usr/local/bin/inotifywait   #验证程序产生

###############################################

inotifywait监控
• 基本用法
– inotifywait [选项] 目标文件夹

• 常用命令选项
– -m,持续监控(捕获一个事件后不退出)
– -r,递归监控、包括子目录及文件
– -q,减少屏幕输出信息
– -e,指定监视的 modify、move、create、delete、attrib 等事件类别

三、书写Shell脚本完成，实时同步

       死循环： while

     while  [条件]
     do
              重复执行的代码
     done


[root@svr7 /]# vim /root/rsync.sh
#!/bin/bash
while  inotifywait -rqq  /opt 
do
 rsync --delete -az /opt/ root@192.168.4.207:/opt/
done  &
[root@svr7 /]# 

################################################















